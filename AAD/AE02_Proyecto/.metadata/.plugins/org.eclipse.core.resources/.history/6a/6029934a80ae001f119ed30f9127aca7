package controller;

import model.AdminActions;
import model.User;
import utils.HashPassword;
import view.AdminView;

import javax.swing.*;
import java.awt.*;
import java.sql.Connection;

public class AdminController {
    private AdminView view;
    private AdminActions adminActions;
    private String currentUserLogin;

    public AdminController(AdminView view, Connection connection, String currentUserLogin) {
        this.view = view;
        this.adminActions = new AdminActions(connection);
        this.currentUserLogin = currentUserLogin;

        this.view.getRegisterButton().addActionListener(e -> openRegisterUserFrame());
        this.view.getImportCsvButton().addActionListener(e -> handleImportCsv());
    }

    public void start() {
        view.setVisible(true);
    }

    private void openRegisterUserFrame() {
        // Lógica para abrir el JFrame para registrar usuarios
        JFrame registerFrame = view.createRegisterUserFrame();
        view.addRegisterUserListeners(registerFrame, (login, password, confirmPassword) -> {
            if (!"admin".equals(currentUserLogin)) {
                view.showMessage("No tienes permisos para registrar un usuario.");
                return false;
            }

            if (!password.equals(confirmPassword)) {
                view.showMessage("Las contraseñas no coinciden.");
                return false;
            }

            User adminUser = new User(currentUserLogin, "", "admin");
            User newUser = new User(login, HashPassword.hash(password), "client");

            boolean success = adminActions.registerUser(adminUser, newUser);
            view.showMessage(success ? "Usuario registrado con éxito." : "Error al registrar el usuario.");
            return success;
        });
    }

    private void handleImportCsv() {
        if (!"admin".equals(currentUserLogin)) {
            view.showMessage("Solo los administradores pueden importar CSV.");
            return;
        }

        try {
            String xmlContent = adminActions.processCsvAndGenerateXml("csv/AE02_population.csv");
            view.displayXmlContent(xmlContent);
            view.showMessage("Archivo CSV importado y XMLs generados exitosamente.");
        } catch (Exception ex) {
            ex.printStackTrace();
            view.showMessage("Error al importar CSV: " + ex.getMessage());
        }
    }
}
