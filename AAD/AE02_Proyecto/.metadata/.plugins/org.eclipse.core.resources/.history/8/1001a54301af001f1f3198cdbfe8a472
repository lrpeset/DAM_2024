package model;

import utils.Authentication;
import utils.CsvProcessor;
import utils.XmlProcessor;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

public class AdminActions {
    private Connection connection;
    private CsvProcessor csvProcessor;
    private XmlProcessor xmlProcessor;

    public AdminActions(Connection connection) {
        this.connection = connection;
        this.csvProcessor = new CsvProcessor(connection);
        this.xmlProcessor = new XmlProcessor();
    }

    public boolean registerUser(User adminUser, User newUser) {
        if (!adminUser.getUserType().equals("admin")) {
            return false;
        }

        String query = "INSERT INTO users (login, password, type) VALUES (?, ?, ?)";
        try (PreparedStatement stmt = connection.prepareStatement(query)) {
            stmt.setString(1, newUser.getUsername());
            stmt.setString(2, Authentication.hashPassword(newUser.getHashedPassword()));
            stmt.setString(3, newUser.getUserType());
            return stmt.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    public String processCsvAndGenerateXml(String csvFilePath) throws Exception {
        List<String[]> rows = csvProcessor.readCsv(csvFilePath);

        StringBuilder xmlContent = new StringBuilder();
        for (String[] row : rows) {
            String xml = xmlProcessor.generateXmlContent(row);
            String country = row[0];
            xmlProcessor.generateXmlFile(country, xml);
            xmlContent.append(String.join(", ", row)).append("\n");
        }
        return xmlContent.toString();
    }
}
