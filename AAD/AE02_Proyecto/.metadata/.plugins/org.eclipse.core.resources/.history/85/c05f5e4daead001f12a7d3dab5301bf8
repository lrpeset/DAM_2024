package model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import utils.Authentication;

public class AdminActions {
    private Connection connection;

    public AdminActions(Connection connection) {
        this.connection = connection;
    }

    public boolean registerUser(User adminUser, User newUser) {
        // Verificar si el usuario actual (adminUser) tiene permisos para registrar un nuevo usuario
        if (!adminUser.getUserType().equals("admin")) {
            // Si el tipo no es "admin", no tiene permiso para registrar
            return false;
        }

        // Si el usuario es admin, registrar el nuevo usuario
        String query = "INSERT INTO users (login, password, type) VALUES (?, ?, ?)";

        try (PreparedStatement stmt = connection.prepareStatement(query)) {
            stmt.setString(1, newUser.getUsername());
            stmt.setString(2, Authentication.hashPassword(newUser.getHashedPassword()));
            stmt.setString(3, newUser.getUserType()); // El tipo de usuario del nuevo usuario (ej. "user")
            return stmt.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    public void importData(List<String[]> data) {
        // Implementar lógica de importación de datos según las necesidades
    }
}
