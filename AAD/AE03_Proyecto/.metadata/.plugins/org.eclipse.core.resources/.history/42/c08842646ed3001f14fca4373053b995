package com.blackjack.model;

import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class UserManager {
    private final MongoCollection<Document> users;

    public UserManager(MongoDatabase database) {
        this.users = database.getCollection("users");
    }

    public boolean registerUser(String username, String password) throws NoSuchAlgorithmException {
        if (userExists(username)) return false;

        String hashedPassword = hashPassword(password);
        Document user = new Document("user", username).append("pass", hashedPassword);
        users.insertOne(user);
        return true;
    }

    public boolean authenticateUser(String username, String password) throws NoSuchAlgorithmException {
        String hashedPassword = hashPassword(password);
        Document user = users.find(new Document("user", username).append("pass", hashedPassword)).first();
        return user != null;
    }

    private boolean userExists(String username) {
        return users.find(new Document("user", username)).first() != null;
    }

    private String hashPassword(String password) throws NoSuchAlgorithmException {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        byte[] hash = md.digest(password.getBytes());
        StringBuilder hexString = new StringBuilder();
        for (byte b : hash) {
            String hex = Integer.toHexString(0xff & b);
            if (hex.length() == 1) hexString.append('0');
            hexString.append(hex);
        }
        return hexString.toString();
    }
}
