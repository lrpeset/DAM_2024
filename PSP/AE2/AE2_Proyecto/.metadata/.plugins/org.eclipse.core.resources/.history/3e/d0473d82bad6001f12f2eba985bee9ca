package es.psp.ae2;

import java.io.*;
import java.net.*;

public class Cliente {
    private static final String SERVIDOR = "localhost"; // Dirección del servidor
    private static final int PUERTO = 12345;           // Puerto del servidor
    private BufferedReader input;  // Para leer los mensajes del servidor
    private PrintWriter output;    // Para enviar mensajes al servidor
    private Socket socket;         // Conexión con el servidor

    public Cliente() {}

    public void iniciar() throws IOException {
        socket = new Socket(SERVIDOR, PUERTO);
        input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        output = new PrintWriter(socket.getOutputStream(), true);

        // Crear hilo para recibir mensajes del servidor
        new Thread(new ClienteHilo(this)).start();

        // Interacción con el servidor
        interactuarConServidor();
    }

    // Método para leer mensajes del servidor
    public String leerMensaje() {
        try {
            return input.readLine();  // Lee un mensaje del servidor
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    // Método para obtener el timestamp (puedes usar la fecha y hora actual)
    public String getTimestamp() {
        return new java.util.Date().toString();  // Devuelve la fecha y hora actuales
    }

    // Método para interactuar con el servidor (enviar y recibir mensajes)
    public void interactuarConServidor() throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String entradaUsuario;

        while (true) {
            // Leer entrada del usuario sin bloquear las respuestas del servidor
            if (reader.ready()) { // Leer solo si hay entrada disponible
                entradaUsuario = reader.readLine();
                output.println(entradaUsuario); // Enviar el mensaje al servidor

                if (entradaUsuario.equals("exit")) {
                    break;
                }
            }

            // Mostrar respuestas del servidor en tiempo real
            String respuesta = leerMensaje();
            if (respuesta != null) {
                System.out.println(respuesta); // Mostrar las respuestas del servidor
            }
        }
    }


    public static void main(String[] args) {
        try {
            Cliente cliente = new Cliente();
            cliente.iniciar();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
