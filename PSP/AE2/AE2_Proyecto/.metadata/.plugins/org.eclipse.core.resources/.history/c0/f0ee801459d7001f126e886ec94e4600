package es.psp.ae2;

import java.io.*;
import java.net.*;
import javax.swing.*;

public class Cliente {
    private Socket socket;
    private BufferedReader input;
    private PrintWriter output;

    public Cliente(String serverIp, int serverPort) {
        try {
            conectarAlServidor(serverIp, serverPort);
            iniciarHiloDeRecepcion();
            gestionarInteraccion();
        } catch (IOException e) {
            System.err.println("Error al conectar al servidor: " + e.getMessage());
        }
    }

    private void conectarAlServidor(String serverIp, int serverPort) throws IOException {
        socket = new Socket(serverIp, serverPort);
        input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        output = new PrintWriter(socket.getOutputStream(), true);
        System.out.println("Conectado al servidor en " + serverIp + ":" + serverPort);
    }

    private void iniciarHiloDeRecepcion() {
        new Thread(new ClienteHilo(input)).start();
    }

    private void gestionarInteraccion() {
        try (BufferedReader consoleInput = new BufferedReader(new InputStreamReader(System.in))) {
            seleccionarCanal(consoleInput);
            establecerNombreUsuario(consoleInput);
            iniciarBuclePrincipal(consoleInput);
        } catch (IOException e) {
            System.err.println("Error durante la interacción con el cliente: " + e.getMessage());
        }
    }

    private void seleccionarCanal(BufferedReader consoleInput) throws IOException {
        System.out.print("Selecciona un canal (número): ");
        String canalSeleccionado = leerEntradaDeConsola(consoleInput);
        output.println(canalSeleccionado);
    }

    private void establecerNombreUsuario(BufferedReader consoleInput) throws IOException {
        System.out.print("Introduce tu nombre de usuario: ");
        String nombreUsuario = leerEntradaDeConsola(consoleInput);
        output.println(nombreUsuario);
    }

    private void iniciarBuclePrincipal(BufferedReader consoleInput) throws IOException {
        System.out.println("Conectado. Pulsa 'Intro' para abrir el popup de mensajería o escribe comandos directamente.");

        while (true) {
            String inputLine = leerEntradaDeConsola(consoleInput);

            if (inputLine == null || inputLine.trim().isEmpty()) {
                manejarPopupDeMensajeria();
            } else {
                output.println(inputLine);
                if ("exit".equalsIgnoreCase(inputLine)) {
                    System.out.println("Cerrando cliente...");
                    break;
                }
            }
        }
    }

    private String leerEntradaDeConsola(BufferedReader consoleInput) throws IOException {
        return consoleInput.readLine();
    }

    private void manejarPopupDeMensajeria() {
        String mensaje = JOptionPane.showInputDialog(null, "Escribe tu mensaje:", "Enviar mensaje",
                JOptionPane.PLAIN_MESSAGE);

        if (mensaje == null || mensaje.trim().isEmpty()) {
            System.out.println("No se envió ningún mensaje.");
        } else {
            output.println(mensaje);
        }
    }

    public static void main(String[] args) {
        try (BufferedReader consoleInput = new BufferedReader(new InputStreamReader(System.in))) {
            System.out.print("Introduce la IP del servidor (localhost): ");
            String serverIp = consoleInput.readLine().trim();
            System.out.print("Introduce el puerto del servidor (5000): ");
            int serverPort = Integer.parseInt(consoleInput.readLine().trim());

            new Cliente(serverIp, serverPort);
        } catch (IOException | NumberFormatException e) {
            System.err.println("Error en la entrada del cliente: " + e.getMessage());
        }
    }
}
