package es.psp.ae2;

import java.io.*;
import java.net.*;
import javax.swing.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class Cliente {
	private Socket socket;
	private BufferedReader input;
	private PrintWriter output;

	public Cliente(String serverIp, int serverPort) {
		try {
			socket = new Socket(serverIp, serverPort);
			input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			output = new PrintWriter(socket.getOutputStream(), true);

			System.out.println("Conectado al servidor en " + serverIp + ":" + serverPort);

			ClienteHilo receiver = new ClienteHilo(input);
			Thread receiverThread = new Thread(receiver);
			receiverThread.start();

			enviarMensajes();
		} catch (IOException e) {
			System.err.println("Error al conectar al servidor: " + e.getMessage());
		}
	}

	private void enviarMensajes() {
	    try {
	        BufferedReader consoleInput = new BufferedReader(new InputStreamReader(System.in));
	        while (true) {
	            String inputLine = consoleInput.readLine();

	            if (inputLine == null || inputLine.trim().isEmpty()) {
	                // Si no se ingresa nada en la consola, abrir la ventana para enviar un mensaje
	                String mensaje = JOptionPane.showInputDialog(null, "Escribe tu mensaje:", "Enviar mensaje", JOptionPane.PLAIN_MESSAGE);

	                if (mensaje == null || mensaje.trim().isEmpty()) {
	                    System.out.println("No se envió ningún mensaje.");
	                    continue;
	                }

	                output.println(mensaje);
	            } else {
	                // Manejo de comandos especiales
	                if (inputLine.equalsIgnoreCase("whois") || inputLine.equalsIgnoreCase("channels") || inputLine.equalsIgnoreCase("exit")) {
	                    output.println(inputLine);
	                    if (inputLine.equalsIgnoreCase("exit")) break;
	                } else if (inputLine.startsWith("@canal")) {
	                    // Verificar formato del comando
	                    if (inputLine.length() > 7) { // '@canalX ' tiene 7 caracteres
	                        output.println(inputLine.trim());
	                    } else {
	                        System.out.println("El comando '@canal' debe incluir un número de canal y un mensaje. Ejemplo: @canal2 hola");
	                    }
	                } else {
	                    // Enviar mensaje estándar
	                    output.println(inputLine);
	                }
	            }
	        }
	    } catch (IOException e) {
	        System.err.println("Error al leer entrada de consola: " + e.getMessage());
	    }
	}





	public static void main(String[] args) {
		try {
			BufferedReader consoleInput = new BufferedReader(new InputStreamReader(System.in));

			System.out.print("Introduce la IP del servidor (localhost): ");
			String serverIp = consoleInput.readLine();

			System.out.print("Introduce el puerto del servidor (5000): ");
			int serverPort = Integer.parseInt(consoleInput.readLine());

			new Cliente(serverIp, serverPort);
		} catch (IOException e) {
			System.err.println("Error en la entrada del cliente: " + e.getMessage());
		}
	}
}
