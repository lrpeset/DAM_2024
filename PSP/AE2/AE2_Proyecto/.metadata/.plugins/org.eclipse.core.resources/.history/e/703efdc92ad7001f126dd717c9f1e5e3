package es.psp.ae2;

import java.io.*;
import java.net.*;
import javax.swing.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

public class Cliente {
    private Socket socket;
    private BufferedReader input;
    private PrintWriter output;
    private String canalActual;
    private String nombreUsuario;

    public Cliente(String serverIp, int serverPort) {
        try {
            // Conectar al servidor
            socket = new Socket(serverIp, serverPort);
            input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            output = new PrintWriter(socket.getOutputStream(), true);

            System.out.println("Conectado al servidor en " + serverIp + ":" + serverPort);

            // Mostrar canales disponibles
            mostrarCanales();

            // Lanzar hilo para recibir mensajes del servidor
            ClienteHilo receiver = new ClienteHilo(input);
            Thread receiverThread = new Thread(receiver);
            receiverThread.start();

            // Enviar mensajes al servidor
            enviarMensajes();
        } catch (IOException e) {
            System.err.println("Error al conectar al servidor: " + e.getMessage());
        }
    }

    private void mostrarCanales() {
        try {
            // Leer los canales disponibles enviados por el servidor
            String canalesDisponibles = input.readLine();
            System.out.println(canalesDisponibles);  // Mostrar los canales al cliente

            // Solicitar selección de canal
            String canalSeleccionado = JOptionPane.showInputDialog(null, "Selecciona un canal (número):", "Seleccionar Canal", JOptionPane.PLAIN_MESSAGE);

            if (canalSeleccionado == null || canalSeleccionado.trim().isEmpty()) {
                System.out.println("Selección de canal cancelada.");
                return;
            }

            // Enviar la selección del canal al servidor
            output.println(canalSeleccionado);

            // Confirmación del canal seleccionado
            canalActual = input.readLine();  // Recibir canal seleccionado por el servidor
            System.out.println("Conectado al canal: " + canalActual);

            // Solicitar nombre de usuario
            nombreUsuario = JOptionPane.showInputDialog(null, "Introduce tu nombre de usuario:", "Seleccionar Nombre de Usuario", JOptionPane.PLAIN_MESSAGE);
            output.println(nombreUsuario);
            System.out.println("Nombre de usuario: " + nombreUsuario);

        } catch (IOException e) {
            System.err.println("Error al mostrar canales o conectar al canal: " + e.getMessage());
        }
    }

    private void enviarMensajes() {
        BufferedReader consoleInput = new BufferedReader(new InputStreamReader(System.in));

        while (true) {
            // Mostrar ventana emergente para escribir mensaje
            String mensaje = JOptionPane.showInputDialog(null, "Escribe tu mensaje:", "Enviar mensaje", JOptionPane.PLAIN_MESSAGE);

            if (mensaje == null || mensaje.trim().isEmpty()) {
                System.out.println("No se envió ningún mensaje.");
                continue;
            }

            // Agregar marca de tiempo
            String timestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
            output.println(mensaje);
            System.out.println("[" + timestamp + "] Tú: " + mensaje);
        }
    }

    public static void main(String[] args) {
        try {
            BufferedReader consoleInput = new BufferedReader(new InputStreamReader(System.in));

            // Pedir IP del servidor
            System.out.print("Introduce la IP del servidor (localhost): ");
            String serverIp = consoleInput.readLine();

            // Pedir puerto del servidor
            System.out.print("Introduce el puerto del servidor (5000): ");
            int serverPort = Integer.parseInt(consoleInput.readLine());

            // Crear instancia del cliente
            new Cliente(serverIp, serverPort);
        } catch (IOException e) {
            System.err.println("Error en la entrada del cliente: " + e.getMessage());
        }
    }
}
