package es.psp.ae2;

import java.io.*;
import java.net.*;
import java.util.*;

public class Cliente {
    private static final String SERVIDOR = "localhost";  // Dirección del servidor
    private static final int PUERTO = 12345;            // Puerto del servidor
    private BufferedReader input;  // Para leer los mensajes del servidor
    private PrintWriter output;    // Para enviar mensajes al servidor
    private Socket socket;         // Conexión con el servidor
    private Queue<String> mensajesRecibidos; // Cola para almacenar los mensajes recibidos

    public Cliente() {
        mensajesRecibidos = new LinkedList<>();
    }

    public void iniciar() throws IOException {
        socket = new Socket(SERVIDOR, PUERTO);
        input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        output = new PrintWriter(socket.getOutputStream(), true);

        // Hilo para recibir mensajes del servidor
        new Thread(new ReceptorMensajes()).start();
    }

    // Método para recibir mensajes y almacenarlos en la cola
    public void recibirMensaje(String mensaje) {
        mensajesRecibidos.add(mensaje);
    }

    // Método que devuelve el siguiente mensaje de la cola
    public String leerMensaje() {
        return mensajesRecibidos.poll(); // Devuelve y elimina el primer mensaje de la cola
    }

    // Método para obtener el timestamp actual
    public String getTimestamp() {
        return new java.text.SimpleDateFormat("HH:mm:ss").format(new java.util.Date());
    }

    // Clase para recibir mensajes en un hilo
    private class ReceptorMensajes implements Runnable {
        @Override
        public void run() {
            try {
                String mensaje;
                while ((mensaje = input.readLine()) != null) {
                    recibirMensaje(mensaje); // Guardamos el mensaje en la cola
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        try {
            Cliente cliente = new Cliente();
            cliente.iniciar();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
